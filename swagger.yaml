swagger: '2.0'
info:
  description: dividend api
  version: 0.0.2
  title: dividend api
  contact:
    name: Roberto Celedon
    email: roberto.celedon@bennu.cl
host: 'localhost:8080'
basePath: /v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "For accessing the API a valid JWT token must be passed in all the queries in the 'Authorization' header. A valid JWT token is generated by the API and retourned as answer of a call to the route /login/auth giving a valid username & password. The following syntax must be used in the 'Authorization' header : xxxxxx.yyyyyyy.zzzzzz"
paths:
  '/status/{mutualCode}':
    get:
      tags:
        - status
      summary: "  get mutual status"
      description: "get mutual status"
      operationId: statusMutualCodeGET
      produces:
        - application/json
      parameters:
        - name: mutualCode
          in: path
          description: "mutual code"
          required: true
          type: string
        - name: Authorization
          in: header
          description: "an token authorization header"
          required: true
          type: string
      responses:
        '200':
          description: A Status object
          schema:
            $ref: '#/definitions/Status'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: Status
  '/dividend/{mutualCode}':
    get:
      tags:
        - dividend
      summary: "get dividend to payment"
      description: "get dividend to payment"
      operationId: dividendMutualCodeGET
      produces:
        - application/json
      parameters:
        - name: mutualCode
          in: path
          description: "mutual code"
          required: true
          type: string
        - name: Authorization
          in: header
          description: "an token authorization header"
          required: true
          type: string
      responses:
        '200':
          description: "A Dividend object"
          schema:
            $ref: '#/definitions/Dividend'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: Dividend
  /login/auth:
    post:
      tags:
        - auth
      summary: "create token"
      description: "login and create token for authentication"
      operationId: createAuthenticationToken
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: JwtAuthenticationRequest
          in: body
          schema:
            $ref: '#/definitions/JwtAuthenticationRequest'
      responses:
        '200':
          description: "A JwtAuthenticationResponse object"
          schema:
            $ref: '#/definitions/JwtAuthenticationResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: Auth
  /login/refresh:
    get:
      tags:
        - refresh
      summary: "refresh a token"
      description: "Refresh token, get a new token. To refresh the toke, a valid token must be added in the header that has not yet expired"
      operationId: refreshAndGetAuthenticationToken
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: "an token authorization header"
          required: true
          type: string
      responses:
        '200':
          description: "A JwtAuthenticationResponse object"
          schema:
            $ref: '#/definitions/JwtAuthenticationResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: Refresh
  /login/verify:
    post:
      tags:
        - verify
      summary: "verify a token"
      description: "verify a token and return true or false"
      operationId: verifyAuthenticationToken
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: TokenVerify
          in: body
          schema:
            $ref: '#/definitions/TokenVerify'
      responses:
        '200':
          description: "JwtVerify json"
          schema:
            $ref: '#/definitions/JwtVerify'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
      x-swagger-router-controller: Verify
definitions:
  TokenVerify:
    type: object
    properties:
      token:
        type: string
        description: token
    example:
      token: "xxxxxx.yyyyyyy.zzzzzz"
  JwtAuthenticationRequest:
    type: object
    properties:
      username:
        type: string
        description: username
      password:
        type: string
        description: password
    example:
      username: test
      password: test
  JwtVerify:
    type: object
    properties:
      verify:
        type: boolean
        description: verify
    example:
      verify: 'true'
  JwtAuthenticationResponse:
    type: object
    properties:
      token:
        type: string
      expiration:
        type: string
        format: date
        pattern: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
    example:
      token: >-
        eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0IiwiYXVkaWVuY2UiOiJ3ZWIiLCJjcmVhdGVkIjoxNTM4NTA4OTQ3ODg0LCJleHAiOjE1MzkxMTM3NDd9.sSTUCG46-MGq_vetgJ4IfBW7gj9C_FddIPe_YlnN8ZLrEw94FRFIoYX3yZ7Wv-q_nVxQxDd8rQLjC3zHdxfe4Q
      expiration: '2018-10-03T18:50:03.132Z'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: code response
      message:
        type: string
        description: message response
  Status:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: code response
      status:
        type: boolean
        description: enable or disabled download pdf
      message:
        type: string
        description: message to show
      quota:
        type: integer
        format: int64
        description: quota of dividend
    example:
      code: 200
      message: message to show
      status: true
      quota: 6
  Dividend:
    type: object
    properties:
      code:
        type: integer
        format: int32
        description: code response
      message:
        type: string
        description: message response
      mutualCode:
        type: string
        description: mutual code
      quota:
        type: integer
        format: int64
        description: dividend quota number
      dayToPay:
        type: string
        format: date
        pattern: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
        description: day to pay the dividend
      pdf:
        type: string
        format: byte
        description: Base64-encoded contents of dividend PDF file
        pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
    example:
      code: 200
      mutualCode: 20180900977-A001A001
      quota: 6
      message: message to show
      dayToPay: '2018-10-03T18:50:03.132Z'
      pdf: "JVBERi0xLjQKJeLjz9MKNSAwIG9iaiA8PC9GaWx0ZXIvRENURGVjb2RlL1R5cGU....."
